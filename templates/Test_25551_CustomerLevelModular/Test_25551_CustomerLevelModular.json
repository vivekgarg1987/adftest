{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"loopsSQLbackend": {
			"type": "string"
		},
		"CumulocityREST": {
			"type": "string"
		},
		"AzureDataLakeStoreGen1": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Test_25551_CustomerLevelModular')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getCustomerMetadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT COMPONENT_ID, SOURCE_COMPONENT_ID, SECTOR_NAME, CUSTOMER_NAME\nFROM [master_tables].[SOURCE]\nWHERE CUSTOMER_ID =', pipeline().parameters.cId)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_LOOPS_COMPONENT",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "getCustomerMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('getCustomerMetadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "GeneralCumulocity",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GeneralCumulocity",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"source": {
												"value": "@item().SOURCE_COMPONENT_ID",
												"type": "Expression"
											},
											"sectorName": {
												"value": "@item().SECTOR_NAME",
												"type": "Expression"
											},
											"cId": {
												"value": "@pipeline().parameters.cId",
												"type": "Expression"
											},
											"relativeURL": "/measurement/measurements",
											"withTotalPages": "true",
											"pageSize": "2000",
											"componentId": {
												"value": "@item().COMPONENT_ID",
												"type": "Expression"
											},
											"MyWindowInitialStart": {
												"value": "@pipeline().parameters.MyWindowInitialStart",
												"type": "Expression"
											},
											"customerName": {
												"value": "@item().CUSTOMER_NAME",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"cId": {
						"type": "string",
						"defaultValue": "25551"
					},
					"MyWindowInitialStart": {
						"type": "string",
						"defaultValue": "2020-01-25T00:00:00Z"
					}
				},
				"folder": {
					"name": "PipelineTest"
				},
				"annotations": [],
				"lastPublishTime": "2020-06-12T13:46:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_LOOPS_COMPONENT')]",
				"[concat(variables('factoryId'), '/pipelines/GeneralCumulocity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_LOOPS_COMPONENT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('loopsSQLbackend')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "cumulocityAuto"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LOAD_NUM",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "START_TIME",
						"type": "nvarchar"
					},
					{
						"name": "WRITE_TIME",
						"type": "nvarchar"
					},
					{
						"name": "JOB_NAME",
						"type": "nvarchar"
					},
					{
						"name": "JOB_STATUS",
						"type": "nvarchar"
					},
					{
						"name": "FILE_NAME",
						"type": "nvarchar"
					},
					{
						"name": "COMPONENT_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "SENSOR_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "SECTOR_NAME",
						"type": "nvarchar"
					},
					{
						"name": "CUSTOMER_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "JOB_ID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "master_tables",
					"table": "LOOPS_COMPONENT_BEN_TEST2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GeneralCumulocity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getLastTimestamp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[readLastTimestamp]",
								"storedProcedureParameters": {
									"COMPONENT_ID": {
										"type": "Int64",
										"value": {
											"value": "@pipeline().parameters.componentId",
											"type": "Expression"
										}
									},
									"JOB_NAME": {
										"type": "String",
										"value": {
											"value": "@concat('cumulocity_Id',pipeline().parameters.source,'_json')",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "loopsSQLloadManagement",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "ifFirstRequest",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "getLastTimestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(contains(activity('getLastTimestamp').output,'firstRow'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "cumulocityRequest",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "startedSQLwrite",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010"
										},
										"sink": {
											"type": "AzureDataLakeStoreSink",
											"copyBehavior": "PreserveHierarchy"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "cumulocity",
											"type": "DatasetReference",
											"parameters": {
												"source": {
													"value": "@pipeline().parameters.source",
													"type": "Expression"
												},
												"relativeURL": {
													"value": "@pipeline().parameters.relativeURL",
													"type": "Expression"
												},
												"pageSize": {
													"value": "@pipeline().parameters.pageSize",
													"type": "Expression"
												},
												"withTotalPages": {
													"value": "@pipeline().parameters.withTotalPages",
													"type": "Expression"
												},
												"MyWindowStart": {
													"value": "@formatDateTime(activity('getLastTimestamp').output.firstRow.lastTimestamp, 'yyyy-MM-ddTHH:mm:ss.FFFFFFZ')",
													"type": "Expression"
												},
												"MyWindowEnd": {
													"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss.FFFFFFZ')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureDataLakeStore_API_pingSink",
											"type": "DatasetReference",
											"parameters": {
												"componentId": {
													"value": "@pipeline().parameters.componentId",
													"type": "Expression"
												},
												"MyWindowStart": {
													"value": "@formatDateTime(activity('getLastTimestamp').output.firstRow.lastTimestamp, 'yyyy-MM-ddTHH:mm:ss.FFFFFFZ')",
													"type": "Expression"
												},
												"MyWindowEnd": {
													"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss.FFFFFFZ')",
													"type": "Expression"
												},
												"cId": {
													"value": "@pipeline().parameters.cId",
													"type": "Expression"
												},
												"sectorName": {
													"value": "@pipeline().parameters.sectorName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "startedSQLwrite",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[logCumulocityRequest]",
										"storedProcedureParameters": {
											"COMPONENT_ID": {
												"value": {
													"value": "@pipeline().parameters.componentId",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"CUSTOMER_ID": {
												"value": {
													"value": "@pipeline().parameters.cId",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"CUSTOMER_NAME": {
												"value": {
													"value": "@pipeline().parameters.customerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"ERROR_MESSAGE_TEXT": {
												"value": null,
												"type": "String"
											},
											"ERROR_TYPE_NAME": {
												"value": null,
												"type": "String"
											},
											"FILE_NAME": {
												"value": {
													"value": "@concat('Id',pipeline().parameters.componentId,'_From',formatDateTime(activity('getLastTimestamp').output.firstRow.lastTimestamp, 'yyyy-MM-ddTHH.mm.ss'),'_To',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH.mm.ss'),'.json')",
													"type": "Expression"
												},
												"type": "String"
											},
											"JOB_NAME": {
												"value": {
													"value": "@concat('cumulocity_Id',pipeline().parameters.source,'_json')",
													"type": "Expression"
												},
												"type": "String"
											},
											"JOB_STATUS": {
												"value": "STARTED",
												"type": "String"
											},
											"LAST_PROCESSED_RECORD_DATE_TIME": {
												"value": null,
												"type": "DateTime"
											},
											"MAX_RUNNING_HOURS_DURATION": {
												"value": null,
												"type": "Single"
											},
											"RECORD_COUNT": {
												"value": null,
												"type": "Int64"
											},
											"SECTOR_NAME": {
												"value": {
													"value": "@pipeline().parameters.sectorName",
													"type": "Expression"
												},
												"type": "String"
											},
											"SOURCE_COMPONENT_ID": {
												"value": {
													"value": "@pipeline().parameters.source",
													"type": "Expression"
												},
												"type": "String"
											},
											"START_TIME": {
												"value": {
													"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd HH:mm:ss.FFF')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TOP_UP_SECONDS_DURATION": {
												"value": null,
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('loopsSQLbackend')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "completedSQLwrite",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "cumulocityRequest",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[logCumulocityRequest]",
										"storedProcedureParameters": {
											"COMPONENT_ID": {
												"value": {
													"value": "@pipeline().parameters.componentId",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"CUSTOMER_ID": {
												"value": {
													"value": "@pipeline().parameters.cId",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"CUSTOMER_NAME": {
												"value": {
													"value": "@pipeline().parameters.customerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"ERROR_MESSAGE_TEXT": {
												"value": null,
												"type": "String"
											},
											"ERROR_TYPE_NAME": {
												"value": null,
												"type": "String"
											},
											"FILE_NAME": {
												"value": {
													"value": "@concat('Id',pipeline().parameters.componentId,'_From',formatDateTime(activity('getLastTimestamp').output.firstRow.lastTimestamp, 'yyyy-MM-ddTHH.mm.ss'),'_To',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH.mm.ss'),'.json')",
													"type": "Expression"
												},
												"type": "String"
											},
											"JOB_NAME": {
												"value": {
													"value": "@concat('cumulocity_Id',pipeline().parameters.source,'_json')",
													"type": "Expression"
												},
												"type": "String"
											},
											"JOB_STATUS": {
												"value": "COMPLETED",
												"type": "String"
											},
											"LAST_PROCESSED_RECORD_DATE_TIME": {
												"value": null,
												"type": "DateTime"
											},
											"MAX_RUNNING_HOURS_DURATION": {
												"value": null,
												"type": "Single"
											},
											"RECORD_COUNT": {
												"value": null,
												"type": "Int64"
											},
											"SECTOR_NAME": {
												"value": {
													"value": "@pipeline().parameters.sectorName",
													"type": "Expression"
												},
												"type": "String"
											},
											"SOURCE_COMPONENT_ID": {
												"value": {
													"value": "@pipeline().parameters.source",
													"type": "Expression"
												},
												"type": "String"
											},
											"START_TIME": {
												"value": {
													"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd HH:mm:ss.FFF')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TOP_UP_SECONDS_DURATION": {
												"value": null,
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('loopsSQLbackend')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "failedSQLwrite",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "cumulocityRequest",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[logCumulocityRequest]",
										"storedProcedureParameters": {
											"COMPONENT_ID": {
												"value": {
													"value": "@pipeline().parameters.componentId",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"CUSTOMER_ID": {
												"value": {
													"value": "@pipeline().parameters.cId",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"CUSTOMER_NAME": {
												"value": {
													"value": "@pipeline().parameters.customerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"ERROR_MESSAGE_TEXT": {
												"value": null,
												"type": "String"
											},
											"ERROR_TYPE_NAME": {
												"value": null,
												"type": "String"
											},
											"FILE_NAME": {
												"value": {
													"value": "@concat('Id',pipeline().parameters.componentId,'_From',formatDateTime(activity('getLastTimestamp').output.firstRow.lastTimestamp, 'yyyy-MM-ddTHH.mm.ss'),'_To',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH.mm.ss'),'.json')",
													"type": "Expression"
												},
												"type": "String"
											},
											"JOB_NAME": {
												"value": {
													"value": "@concat('cumulocity_Id',pipeline().parameters.source,'_json')",
													"type": "Expression"
												},
												"type": "String"
											},
											"JOB_STATUS": {
												"value": "FAILED",
												"type": "String"
											},
											"LAST_PROCESSED_RECORD_DATE_TIME": {
												"value": null,
												"type": "DateTime"
											},
											"MAX_RUNNING_HOURS_DURATION": {
												"value": null,
												"type": "Single"
											},
											"RECORD_COUNT": {
												"value": null,
												"type": "Int64"
											},
											"SECTOR_NAME": {
												"value": {
													"value": "@pipeline().parameters.sectorName",
													"type": "Expression"
												},
												"type": "String"
											},
											"SOURCE_COMPONENT_ID": {
												"value": {
													"value": "@pipeline().parameters.source",
													"type": "Expression"
												},
												"type": "String"
											},
											"START_TIME": {
												"value": {
													"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd HH:mm:ss.FFF')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TOP_UP_SECONDS_DURATION": {
												"value": null,
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('loopsSQLbackend')]",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "firstCumulocityRequest",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "firstStartedSQLwrite",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010"
										},
										"sink": {
											"type": "AzureDataLakeStoreSink",
											"copyBehavior": "PreserveHierarchy"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "cumulocity",
											"type": "DatasetReference",
											"parameters": {
												"source": {
													"value": "@pipeline().parameters.source",
													"type": "Expression"
												},
												"relativeURL": {
													"value": "@pipeline().parameters.relativeURL",
													"type": "Expression"
												},
												"pageSize": {
													"value": "@pipeline().parameters.pageSize",
													"type": "Expression"
												},
												"withTotalPages": {
													"value": "@pipeline().parameters.withTotalPages",
													"type": "Expression"
												},
												"MyWindowStart": {
													"value": "@pipeline().parameters.MyWindowInitialStart",
													"type": "Expression"
												},
												"MyWindowEnd": {
													"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss.FFFFFFZ')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureDataLakeStore_API_pingSink",
											"type": "DatasetReference",
											"parameters": {
												"componentId": {
													"value": "@pipeline().parameters.componentId",
													"type": "Expression"
												},
												"MyWindowStart": {
													"value": "@pipeline().parameters.MyWindowInitialStart",
													"type": "Expression"
												},
												"MyWindowEnd": {
													"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH:mm:ss.FFFFFFZ')",
													"type": "Expression"
												},
												"cId": {
													"value": "@pipeline().parameters.cId",
													"type": "Expression"
												},
												"sectorName": {
													"value": "@pipeline().parameters.sectorName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "firstStartedSQLwrite",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[logCumulocityRequest]",
										"storedProcedureParameters": {
											"COMPONENT_ID": {
												"value": {
													"value": "@pipeline().parameters.componentId",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"CUSTOMER_ID": {
												"value": {
													"value": "@pipeline().parameters.cId",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"CUSTOMER_NAME": {
												"value": {
													"value": "@pipeline().parameters.customerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"ERROR_MESSAGE_TEXT": {
												"value": null,
												"type": "String"
											},
											"ERROR_TYPE_NAME": {
												"value": null,
												"type": "String"
											},
											"FILE_NAME": {
												"value": {
													"value": "@concat('Id',pipeline().parameters.componentId,'_From',formatDateTime(pipeline().parameters.MyWindowInitialStart, 'yyyy-MM-ddTHH.mm.ss'),'_To',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH.mm.ss'),'.json')",
													"type": "Expression"
												},
												"type": "String"
											},
											"JOB_NAME": {
												"value": {
													"value": "@concat('cumulocity_Id',pipeline().parameters.source,'_json')",
													"type": "Expression"
												},
												"type": "String"
											},
											"JOB_STATUS": {
												"value": "STARTED",
												"type": "String"
											},
											"LAST_PROCESSED_RECORD_DATE_TIME": {
												"value": null,
												"type": "DateTime"
											},
											"MAX_RUNNING_HOURS_DURATION": {
												"value": null,
												"type": "Single"
											},
											"RECORD_COUNT": {
												"value": null,
												"type": "Int64"
											},
											"SECTOR_NAME": {
												"value": {
													"value": "@pipeline().parameters.sectorName",
													"type": "Expression"
												},
												"type": "String"
											},
											"SOURCE_COMPONENT_ID": {
												"value": {
													"value": "@pipeline().parameters.source",
													"type": "Expression"
												},
												"type": "String"
											},
											"START_TIME": {
												"value": {
													"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd HH:mm:ss.FFF')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TOP_UP_SECONDS_DURATION": {
												"value": null,
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('loopsSQLbackend')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "firstCompletedSQLwrite",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "firstCumulocityRequest",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[logCumulocityRequest]",
										"storedProcedureParameters": {
											"COMPONENT_ID": {
												"value": {
													"value": "@pipeline().parameters.componentId",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"CUSTOMER_ID": {
												"value": {
													"value": "@pipeline().parameters.cId",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"CUSTOMER_NAME": {
												"value": {
													"value": "@pipeline().parameters.customerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"ERROR_MESSAGE_TEXT": {
												"value": null,
												"type": "String"
											},
											"ERROR_TYPE_NAME": {
												"value": null,
												"type": "String"
											},
											"FILE_NAME": {
												"value": {
													"value": "@concat('Id',pipeline().parameters.componentId,'_From',formatDateTime(pipeline().parameters.MyWindowInitialStart, 'yyyy-MM-ddTHH.mm.ss'),'_To',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH.mm.ss'),'.json')",
													"type": "Expression"
												},
												"type": "String"
											},
											"JOB_NAME": {
												"value": {
													"value": "@concat('cumulocity_Id',pipeline().parameters.source,'_json')",
													"type": "Expression"
												},
												"type": "String"
											},
											"JOB_STATUS": {
												"value": "COMPLETED",
												"type": "String"
											},
											"LAST_PROCESSED_RECORD_DATE_TIME": {
												"value": null,
												"type": "DateTime"
											},
											"MAX_RUNNING_HOURS_DURATION": {
												"value": null,
												"type": "Single"
											},
											"RECORD_COUNT": {
												"value": null,
												"type": "Int64"
											},
											"SECTOR_NAME": {
												"value": {
													"value": "@pipeline().parameters.sectorName",
													"type": "Expression"
												},
												"type": "String"
											},
											"SOURCE_COMPONENT_ID": {
												"value": {
													"value": "@pipeline().parameters.source",
													"type": "Expression"
												},
												"type": "String"
											},
											"START_TIME": {
												"value": {
													"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd HH:mm:ss.FFF')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TOP_UP_SECONDS_DURATION": {
												"value": null,
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('loopsSQLbackend')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "firstFailedSQLwrite",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "firstCumulocityRequest",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[logCumulocityRequest]",
										"storedProcedureParameters": {
											"COMPONENT_ID": {
												"value": {
													"value": "@pipeline().parameters.componentId",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"CUSTOMER_ID": {
												"value": {
													"value": "@pipeline().parameters.cId",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"CUSTOMER_NAME": {
												"value": {
													"value": "@pipeline().parameters.customerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"ERROR_MESSAGE_TEXT": {
												"value": null,
												"type": "String"
											},
											"ERROR_TYPE_NAME": {
												"value": null,
												"type": "String"
											},
											"FILE_NAME": {
												"value": {
													"value": "@concat('Id',pipeline().parameters.componentId,'_From',formatDateTime(pipeline().parameters.MyWindowInitialStart, 'yyyy-MM-ddTHH.mm.ss'),'_To',formatDateTime(pipeline().TriggerTime, 'yyyy-MM-ddTHH.mm.ss'),'.json')",
													"type": "Expression"
												},
												"type": "String"
											},
											"JOB_NAME": {
												"value": {
													"value": "@concat('cumulocity_Id',pipeline().parameters.source,'_json')",
													"type": "Expression"
												},
												"type": "String"
											},
											"JOB_STATUS": {
												"value": "FAILED",
												"type": "String"
											},
											"LAST_PROCESSED_RECORD_DATE_TIME": {
												"value": null,
												"type": "DateTime"
											},
											"MAX_RUNNING_HOURS_DURATION": {
												"value": null,
												"type": "Single"
											},
											"RECORD_COUNT": {
												"value": null,
												"type": "Int64"
											},
											"SECTOR_NAME": {
												"value": {
													"value": "@pipeline().parameters.sectorName",
													"type": "Expression"
												},
												"type": "String"
											},
											"SOURCE_COMPONENT_ID": {
												"value": {
													"value": "@pipeline().parameters.source",
													"type": "Expression"
												},
												"type": "String"
											},
											"START_TIME": {
												"value": {
													"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd HH:mm:ss.FFF')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TOP_UP_SECONDS_DURATION": {
												"value": null,
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('loopsSQLbackend')]",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"source": {
						"type": "string"
					},
					"sectorName": {
						"type": "string"
					},
					"cId": {
						"type": "string"
					},
					"relativeURL": {
						"type": "string",
						"defaultValue": "/measurement/measurements"
					},
					"withTotalPages": {
						"type": "string",
						"defaultValue": "true"
					},
					"pageSize": {
						"type": "string",
						"defaultValue": "2000"
					},
					"componentId": {
						"type": "string"
					},
					"MyWindowInitialStart": {
						"type": "string",
						"defaultValue": "2019-11-27T00:00:00Z"
					},
					"customerName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-02-03T13:20:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/loopsSQLloadManagement')]",
				"[concat(variables('factoryId'), '/datasets/cumulocity')]",
				"[concat(variables('factoryId'), '/datasets/AzureDataLakeStore_API_pingSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/loopsSQLloadManagement')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('loopsSQLbackend')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "cumulocityAuto"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LOAD_NUM",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "START_TIME",
						"type": "nvarchar"
					},
					{
						"name": "WRITE_TIME",
						"type": "nvarchar"
					},
					{
						"name": "JOB_NAME",
						"type": "nvarchar"
					},
					{
						"name": "JOB_STATUS",
						"type": "nvarchar"
					},
					{
						"name": "FILE_NAME",
						"type": "nvarchar"
					},
					{
						"name": "COMPONENT_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "SENSOR_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "SECTOR_NAME",
						"type": "nvarchar"
					},
					{
						"name": "CUSTOMER_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "JOB_ID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ctrl_load_management"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cumulocity')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('CumulocityREST')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"source": {
						"type": "string",
						"defaultValue": "TEST"
					},
					"relativeURL": {
						"type": "string",
						"defaultValue": "/measurement/measurements"
					},
					"pageSize": {
						"type": "string",
						"defaultValue": "2000"
					},
					"withTotalPages": {
						"type": "string",
						"defaultValue": "true"
					},
					"MyWindowStart": {
						"type": "string",
						"defaultValue": "MyWindowStart"
					},
					"MyWindowEnd": {
						"type": "string",
						"defaultValue": "MyWindowEnd"
					}
				},
				"folder": {
					"name": "cumulocityAuto"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(dataset().relativeURL,'?pageSize=',dataset().pageSize,'&withTotalPages=',dataset().withTotalPages,'&source=',dataset().source,'&dateFrom=',dataset().MyWindowStart,'&dateTo=',dataset().MyWindowEnd)",
						"type": "Expression"
					},
					"requestMethod": "GET"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStore_API_pingSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureDataLakeStoreGen1')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"componentId": {
						"type": "string",
						"defaultValue": "TEST"
					},
					"MyWindowStart": {
						"type": "string",
						"defaultValue": "TEST"
					},
					"MyWindowEnd": {
						"type": "string",
						"defaultValue": "TEST"
					},
					"cId": {
						"type": "string",
						"defaultValue": "TEST"
					},
					"sectorName": {
						"type": "string",
						"defaultValue": "TEST"
					}
				},
				"folder": {
					"name": "cumulocityAuto"
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "setOfObjects"
					},
					"fileName": {
						"value": "@concat('Id',dataset().componentId,'_From',formatDateTime(dataset().MyWindowStart, 'yyyy-MM-ddTHH.mm.ss'),'_To',formatDateTime(dataset().MyWindowEnd, 'yyyy-MM-ddTHH.mm.ss'),'.json')",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@concat('landingZone/',dataset().sectorName,'/Sensitive/TRN/',dataset().cId,'/Cumulocity_json')",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		}
	]
}